class performming like a blue print
it's not equalt to MVC 
OOP -> Object Orient Paradigm
MVC -> Pattern (Model View Controller) 

class name also can store into variable in php
any data type can be casting to obejct in php 

4 principles of OOP

1. Inheritance -> extends from parent class
2. Polymorphism
3. Encapsulation -> getters and setters
4. Abstraction  

// Access Modifiers
public protected private

__desctuct mostly use for close something such as close database connection

__DIR__ use for proper file paths

Namespaces are qualifiers that solve two different problems:

1. They allow for better organization by grouping classes that work together to perform a task
2. They allow the same name to be used for more than one class

autoloader = load all the require and include files
autoloader does automattically load classes, traits, interfaces
1. php inbuild function -> spl_autoload_register()
2. using composer
composer is php package manager

composer dump-autoload = use after change something in autoloader
composer dump-autoload -o optimizing autoloader // this one is mostly refer
